generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(uuid())
  name           String
  phone          String        @unique
  email          String?
  image          String?
  hashedPassword String
  balance        Float         @default(0)
  createdAt      DateTime      @default(now())
  isMerchant     Boolean       @default(false)
  merchant       Merchant?     @relation(fields: [merchantId], references: [id])
  Payment        Payment[]
  sent           Transaction[] @relation("reciever")
  recieved       Transaction[] @relation("sender")
  merchantId     String?
}

model Merchant {
  id      String @id @default(uuid())
  name    String
  balance Float  @default(0)

  products Product[]
  Payment  Payment[]
  User     User[]
}

model Product {
  id         String    @id @default(uuid())
  merchant   Merchant? @relation(fields: [merchantId], references: [id], onDelete: Cascade)
  merchantId String?
  name       String
  price      Float
  image      String?
  payment    Payment?  @relation(fields: [paymentId], references: [id])
  paymentId  String?
}

model Payment {
  id         String    @id @default(uuid())
  token      String    @unique
  isPaid     Boolean   @default(false)
  User       User?     @relation(fields: [userId], references: [id])
  userId     String?
  Merchant   Merchant? @relation(fields: [merchantId], references: [id])
  merchantId String?
  amount     Float
  products   Product[]
  createdAt  DateTime  @default(now())
}

model Transaction {
  id         String   @id @default(uuid())
  sender     User     @relation(fields: [senderId], references: [id], name: "sender")
  receiver   User     @relation(fields: [recieverId], references: [id], name: "reciever")
  amount     Float
  remark     String?
  createdAt  DateTime @default(now())
  senderId   String
  recieverId String
}
